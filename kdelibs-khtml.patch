--- kdelibs-3.0.4/khtml/ecma/kjs_window.cpp	Sat Sep 28 20:30:38 2002
+++ kdelibs-3.0.5/khtml/ecma/kjs_window.cpp	Fri Nov  1 18:46:44 2002
@@ -425,10 +425,8 @@
     case Length:
       return Number(m_part->frames().count());
     case _Location:
-      if (isSafeScript(exec))
+      // No isSafeScript test here, we must be able to _set_ location.href (#49819)
         return Value(location());
-      else
-        return Undefined();
     case Name:
       return String(m_part->name());
     case _Navigator:
@@ -697,19 +695,18 @@
       return;
     }
     case _Location: {
+      // No isSafeScript here, it's not a security problem to redirect another window
+      // (tested in other browsers)
       // Complete the URL using the "active part" (running interpreter)
       KHTMLPart* p = Window::retrieveActive(exec)->m_part;
       if (p) {
         QString dstUrl = p->htmlDocument().completeURL(value.toString(exec).string()).string();
         //kdDebug() << "Window::put dstUrl=" << dstUrl << " m_part->url()=" << m_part->url().url() << endl;
-        if (dstUrl.find("javascript:", 0, false) || isSafeScript(exec))
-        {
-          // Check if the URL is the current one. No [infinite] redirect in that case.
-          if ( !m_part->url().cmp( KURL(dstUrl), true ) )
+        // Check if the URL is the current one. No [infinite] redirect in that case.
+        if ( !m_part->url().cmp( KURL(dstUrl), true ) )
             m_part->scheduleRedirection(0,
                                         dstUrl,
                                         false /*don't lock history*/);
-        }
       }
       return;
     }
@@ -899,10 +896,13 @@
   DOM::DOMString actDomain = actDocument.domain();
   DOM::DOMString thisDomain = thisDocument.domain();
 
-  if ( actDomain == thisDomain )
+  if ( actDomain == thisDomain ) {
+    //kdDebug(6070) << "Javascript: access granted, domain is '" << actDomain.string() << "'" << endl;
     return true;
+  }
 
   kdWarning(6070) << "Javascript: access denied for current frame '" << actDomain.string() << "' to frame '" << thisDomain.string() << "'" << endl;
+  // TODO after 3.1: throw security exception (exec->setException())
   return false;
 }
 
@@ -1569,6 +1569,9 @@
 
   if (m_part.isNull())
     return Undefined();
+  Window* window = Window::retrieveWindow( m_part );
+  if ( !window || !window->isSafeScript(exec) )
+    return Undefined();
 
   KURL url = m_part->url();
   const HashEntry *entry = Lookup::findEntry(&LocationTable, p);
@@ -1642,6 +1645,8 @@
       break;
     }
     case Hash:
+      // when the hash is already the same ignore it
+      if (str == url.ref()) return;
       url.setRef(str);
       break;
     case Host: {
@@ -1677,15 +1682,23 @@
 
 Value Location::toPrimitive(ExecState *exec, Type) const
 {
+  Window* window = Window::retrieveWindow( m_part );
+  if ( window && window->isSafeScript(exec) )
   return String(toString(exec));
+  return Undefined();
 }
 
-UString Location::toString(ExecState *) const
+UString Location::toString(ExecState *exec) const
 {
+  Window* window = Window::retrieveWindow( m_part );
+  if ( window && window->isSafeScript(exec) )
+  {
   if (!m_part->url().hasPath())
     return m_part->url().prettyURL()+"/";
   else
     return m_part->url().prettyURL();
+  }
+  return "";
 }
 
 Value LocationFunc::tryCall(ExecState *exec, Object &thisObj, const List &args)
--- kdelibs-3.0.4/khtml/khtml_part.cpp	Sat Sep 28 20:30:37 2002
+++ kdelibs-3.0.5/khtml/khtml_part.cpp	Tue Nov  5 03:57:03 2002
@@ -381,6 +381,8 @@
   }
 
   args.metaData().insert("main_frame_request", parentPart() == 0 ? "TRUE" : "FALSE" );
+  args.metaData().insert("ssl_parent_ip", d->m_ssl_parent_ip);
+  args.metaData().insert("ssl_parent_cert", d->m_ssl_parent_cert);
   args.metaData().insert("ssl_was_in_use", d->m_ssl_in_use ? "TRUE" : "FALSE" );
   args.metaData().insert("ssl_activate_warnings", "TRUE" );
   if (d->m_restored)
@@ -997,6 +999,8 @@
 
     // Shouldn't all of this be done only if ssl_in_use == true ? (DF)
 
+    d->m_ssl_parent_ip = d->m_job->queryMetaData("ssl_parent_ip");
+    d->m_ssl_parent_cert = d->m_job->queryMetaData("ssl_parent_cert");
     d->m_ssl_peer_certificate = d->m_job->queryMetaData("ssl_peer_certificate");
     d->m_ssl_peer_chain = d->m_job->queryMetaData("ssl_peer_chain");
     d->m_ssl_peer_ip = d->m_job->queryMetaData("ssl_peer_ip");
@@ -1674,6 +1678,7 @@
   QString u = d->m_redirectURL;
   d->m_delayRedirect = 0;
   d->m_redirectURL = QString::null;
+  d->m_referrer = QString::null;
   if ( u.find( QString::fromLatin1( "javascript:" ), 0, false ) == 0 )
   {
     QString script = KURL::decode_string( u.right( u.length() - 11 ) );
@@ -2267,6 +2272,8 @@
   args.metaData().insert("main_frame_request",
                          parentPart() == 0 ? "TRUE":"FALSE");
   args.metaData().insert("ssl_was_in_use", d->m_ssl_in_use ? "TRUE":"FALSE");
+  args.metaData().insert("ssl_parent_ip", d->m_ssl_parent_ip);
+  args.metaData().insert("ssl_parent_cert", d->m_ssl_parent_cert);
   args.metaData().insert("ssl_activate_warnings", "TRUE");
 
   if ( hasTarget )
@@ -2599,6 +2606,8 @@
 
   child->m_args.metaData().insert("main_frame_request",
                                   parentPart() == 0 ? "TRUE":"FALSE");
+  child->m_args.metaData().insert("ssl_parent_ip", d->m_ssl_parent_ip);
+  child->m_args.metaData().insert("ssl_parent_cert", d->m_ssl_parent_cert);
   child->m_args.metaData().insert("ssl_was_in_use",
                                   d->m_ssl_in_use ? "TRUE":"FALSE");
   child->m_args.metaData().insert("ssl_activate_warnings", "TRUE");
@@ -2930,6 +2939,8 @@
                          parentPart() == 0 ? "TRUE":"FALSE");
   args.metaData().insert("ssl_was_in_use", d->m_ssl_in_use ? "TRUE":"FALSE");
   args.metaData().insert("ssl_activate_warnings", "TRUE");
+  args.metaData().insert("ssl_parent_ip", d->m_ssl_parent_ip);
+  args.metaData().insert("ssl_parent_cert", d->m_ssl_parent_cert);
   args.frameName = _target.isEmpty() ? d->m_doc->baseTarget() : _target ;
 
   // Handle mailto: forms
@@ -3303,7 +3314,9 @@
          << d->m_ssl_cipher_version
          << d->m_ssl_cipher_used_bits
          << d->m_ssl_cipher_bits
-         << d->m_ssl_cert_state;
+         << d->m_ssl_cert_state
+         << d->m_ssl_parent_ip
+         << d->m_ssl_parent_cert;
 
 
   QStringList frameNameLst, frameServiceTypeLst, frameServiceNameLst;
@@ -3379,7 +3392,9 @@
          >> d->m_ssl_cipher_version
          >> d->m_ssl_cipher_used_bits
          >> d->m_ssl_cipher_bits
-         >> d->m_ssl_cert_state;
+         >> d->m_ssl_cert_state
+         >> d->m_ssl_parent_ip
+         >> d->m_ssl_parent_cert;
 
   d->m_paSecurity->setIcon( d->m_ssl_in_use ? "encrypted" : "decrypted" );
 
--- kdelibs-3.0.4/khtml/khtmlpart_p.h	Sat Sep 28 20:30:38 2002
+++ kdelibs-3.0.5/khtml/khtmlpart_p.h	Tue Nov  5 03:57:03 2002
@@ -243,7 +243,9 @@
           m_ssl_cipher_version,
           m_ssl_cipher_used_bits,
           m_ssl_cipher_bits,
-          m_ssl_cert_state;
+          m_ssl_cert_state,
+          m_ssl_parent_ip,
+          m_ssl_parent_cert;
 
   bool m_bComplete:1;
   bool m_bLoadEventEmitted:1;
--- kdelibs-3.0.4/khtml/rendering/render_object.cpp	Wed Sep 18 17:09:31 2002
+++ kdelibs-3.0.5/khtml/rendering/render_object.cpp	Fri Nov  1 18:46:44 2002
@@ -20,7 +20,7 @@
  * the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
  * Boston, MA 02111-1307, USA.
  *
- * $Id$
+ * $Id$
  */
 
 #include "rendering/render_object.h"
@@ -236,9 +236,9 @@
     case DASHED:
         if(style == DASHED)
             p->setPen(QPen(c, width == 1 ? 0 : width, Qt::DashLine));
-        {
-            switch(s)
-            {
+
+        if (width > 0)
+            switch(s) {
             case BSBottom:
             case BSTop:
                 p->drawLine(x1, (y1+y2)/2, x2, (y1+y2)/2);
@@ -246,9 +246,8 @@
             case BSLeft:
                 p->drawLine((x1+x2)/2, y1, (x1+x2)/2, y2);
             }
-        }
-        break;
 
+        break;
     case DOUBLE:
     {
         int third = (width+1)/3;
--- kdelibs-3.0.4/khtml/rendering/render_text.cpp	Mon Aug  5 17:10:40 2002
+++ kdelibs-3.0.5/khtml/rendering/render_text.cpp	Fri Nov  1 18:46:44 2002
@@ -19,7 +19,7 @@
  * the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
  * Boston, MA 02111-1307, USA.
  *
- * $Id$
+ * $Id$
  */
 //#define DEBUG_LAYOUT
 //#define BIDI_DEBUG
@@ -318,6 +318,7 @@
                  borderBottom() + paddingBottom();
 
     bool inside = false;
+    if (style()->visibility() != HIDDEN) {
     TextSlave *s = m_lines.count() ? m_lines[0] : 0;
     int si = 0;
     while(s) {
@@ -328,6 +329,7 @@
         }
 
         s = si < (int) m_lines.count()-1 ? m_lines[++si] : 0;
+        }
     }
 
     setMouseInside(inside);
